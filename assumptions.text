Iteration #1:
Only Space is counted as a word separator
Words with any other characters other than a-zA-Z should be ignored
Since the input comes from the command line we assume that it's rather short not to care about RAM and therefor we won't be using StringBuffers
We assume that the application takes only one input and gives an answer and finishes the execution
A new line symbol provides a token to finish the input

Iteration #2
Number of stopwords can fit into RAM
Stopwords can be compared using ignored case, because some of the letters can be capital
Stopwords can be stored in lowercase format

Iteration #3
Text in the file is good to be stored in a single String without a need to be read using StringBuffers
If file doesn't exist, it should ask for manual input

Iteration #4
Special characters are now treated as word separators
Unique words should be unique regardless the case of characters

Iteration #5
Words having hypens in the beginning or the end also should be treated as unique

Iteration #6
When there is no word, the average length is 0.0

Iteration #7
Index is sorted alphabetically ignoring the case

Iteration #8
Index shows only unique words
Each word in a dictionary is on a new line. No need for correctness check

Iteration #9
We assume that behavior for file input don't change here. A multiple input option will appear only when manual input mode is on
Example in requirements is wrong. `a` is not being ignored in the second sample
